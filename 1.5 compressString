//Implement a method to perform basic string compression using the counts of
repeated characters. For example, the string aabcccccaaa would become
a2blc5a3. If the "compressed" string would not become smaller than the original
string, your method should return the original string.
import java.util.*;
public class JavaTut {
	public static void main(String[] args) {
		Scanner scanner=new Scanner(System.in);
		String s=scanner.nextLine();
		System.out.println(compressString(s));
	}
	public static String compressString(String s){
		int oldLength=s.length();
		int newLength=oldLength;
		int index=0;
		//get the length of modified string
		for(int i=1;i<oldLength;i++){
			if(s.charAt(i)==s.charAt(i-1)){
				index++;
			}else index=0;
			if (index>1) newLength--;
		}
		System.out.println(newLength);
		if (oldLength<=newLength) return s;
		//build new string
		char [] ch=new char[newLength];
		index=1;
		int j=0;
		ch[0]=s.charAt(0);
		for(int i=1;i<oldLength;i++){
			if(s.charAt(i)==s.charAt(i-1)){
				index++;
			}else index=1;
			if(index==1){
				j++;
				ch[j]=s.charAt(i);
			}else if(index==2){
				j++;
				ch[j]=Integer.toString(index).charAt(0);
			}else{
				ch[j]=Integer.toString(index).charAt(0);
			}
		}	
		return String.valueOf(ch);
	}
}
